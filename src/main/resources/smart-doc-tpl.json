{
    "serverUrl": "https://api.linlan.net/java_stage", //服务器地址,非必须。导出postman建议设置成http://{{server}}方便直接在postman直接设置环境变量
    "pathPrefix": "", //设置path前缀,非必须。如配置Servlet ContextPath 。@since 2.2.3
    "isStrict": false, //是否开启严格模式
    "allInOne": true,  //是否将文档合并到一个文件中，一般推荐为true
    "outPath": "doc", //指定文档的输出路径
    "coverOld": true,  //是否覆盖旧的文件，主要用于mardown文件覆盖
    "createDebugPage": true,//@since 2.0.0 smart-doc支持创建可以测试的html页面，仅在AllInOne模式中起作用。
    "packageFilters": "net.linlan.plat.api.*,net.linlan.stage.api.*",//controller包过滤，多个包用英文逗号隔开，2.2.2开始需要采用正则：com.test.controller.*
    "md5EncryptedHtmlName": false,//只有每个controller生成一个html文件是才使用
    "style":"xt256", //基于highlight.js的代码高设置,可选值很多可查看码云wiki，喜欢配色统一简洁的同学可以不设置
    "projectName": "api-doc",//配置自己的项目名称
    "skipTransientField": true,//目前未实现
    "sortByTitle":true,//接口标题排序，默认为false,@since 1.8.7版本开始
    "showAuthor":true,//是否显示接口作者名称，默认是true,不想显示可关闭
    "requestFieldToUnderline":false,//自动将驼峰入参字段在文档中转为下划线格式,//@since 1.8.7版本开始
    "responseFieldToUnderline":false,//自动将驼峰入参字段在文档中转为下划线格式,//@since 1.8.7版本开始
    "inlineEnum":true,//设置为true会将枚举详情展示到参数表中，默认关闭，//@since 1.8.8版本开始
    "recursionLimit":3,//设置允许递归执行的次数用于避免一些对象解析卡主，默认是7，正常为3次以内，//@since 1.8.8版本开始
    "allInOneDocFileName":"api-plat.html",//自定义设置输出文档名称, @since 1.9.0
    "requestExample":"true",//是否将请求示例展示在文档中，默认true，@since 1.9.0
    "responseExample":"true",//是否将响应示例展示在文档中，默认为true，@since 1.9.0
    "urlSuffix":".do",//支持SpringMVC旧项目的url后缀,@since 2.1.0
    "displayActualType":false,//配置true会在注释栏自动显示泛型的真实类型短类名，@since 1.9.6
    "appKey": "20201216788835306945118208",// torna平台对接appKey,, @since 2.0.9
    "appToken": "c16931fa6590483fb7a4e85340fcbfef", //torna平台appToken,@since 2.0.9
    "secret": "W.ZyGMOB9Q0UqujVxnfi@.I#V&tUUYZR",//torna平台secret，@since 2.0.9
    "openUrl": "http://localhost:7700/api",//torna平台地址，填写自己的私有化部署地址@since 2.0.9
    "debugEnvName":"测试环境", //torna环境名称
    "debugEnvUrl":"http://127.0.0.1",//推送torna配置接口服务地址
    "tornaDebug":false,//启用会推送日志
    "ignoreRequestParams":[ //忽略请求参数对象，把不想生成文档的参数对象屏蔽掉，@since 1.9.2
        "net.linlan.man.web.frame.FramePubUser","net.linlan.man.member.entity.MemberAccount"
    ],
    "dataDictionaries": [{ //配置数据字典，没有需求可以不设置
        "title": "目录树结构字典", //数据字典的名称
        "enumClassName": "net.linlan.plat.view.system.constant.TreeTypeEnum", //数据字典枚举类名称
        "codeField": "key",//数据字典字典码对应的字段名称
        "descField": "value"//数据字典对象的描述信息字典
    }],
    "errorCodeDictionaries": [{ //错误码列表，没有需求可以不设置
        "title": "http状态码字典",
        "enumClassName": "net.linlan.plat.mbiz.constant.HttpStatusEnum", //错误码枚举类
        "codeField": "code",//错误码的code码字段名称
        "descField": "msg"//错误码的描述信息对应的字段名
    }],
    "revisionLogs": [{ //文档变更记录，非必须
        "version": "1.0", //文档版本号
        "revisionTime": "2025-02-28 10:30", //文档修订时间
        "status": "update", //变更操作状态，一般为：创建、更新等
        "author": "Linlan", //文档变更作者
        "remarks": "desc" //变更描述
    }],
    "responseParamsTable": true, //是否将响应参数表展示在文档中, 默认true，@since 2.2.5
    "responseBodyAdvice":{ //自smart-doc 1.9.8起，非必须项，ResponseBodyAdvice统一返回设置(不要随便配置根据项目的技术来配置)，可用ignoreResponseBodyAdvice tag来忽略
        "className":"net.linlan.commons.core.ResponseResult" //通用响应体
    },
    "customResponseFields": [{ //自定义添加字段和注释，一般用户处理第三方jar包库，非必须
        "name": "code",//覆盖响应码字段
        "desc": "返回状态码:正常状态为0",//覆盖响应码的字段注释
        "ownerClassName": "net.linlan.commons.core.ResponseResult", //指定你要添加注释的类名
        "ignore":false, //设置true会被自动忽略掉不会出现在文档中
        "value": "0"//设置响应码的值
    },{ //自定义添加字段和注释，一般用户处理第三方jar包库，非必须
        "name": "msg",//覆盖响应码字段
        "desc": "返回消息",//覆盖响应码的字段注释
        "ownerClassName": "net.linlan.commons.core.ResponseResult", //指定你要添加注释的类名
        "ignore":false, //设置true会被自动忽略掉不会出现在文档中
        "value": "正常"//设置响应码的值
    },{ //自定义添加字段和注释，一般用户处理第三方jar包库，非必须
        "name": "success",//覆盖响应码字段
        "desc": "成功标记:正常为true,错误为false",//覆盖响应码的字段注释
        "ownerClassName": "net.linlan.commons.core.ResponseResult", //指定你要添加注释的类名
        "ignore":false, //设置true会被自动忽略掉不会出现在文档中
        "value": "true"//设置响应码的值
    }],
    "requestParamsTable": true, // 是否将请求参数表展示在文档中，默认true，@since 2.2.5
    "requestBodyAdvice":{ ////自smart-doc 2.1.4 起，支持设置RequestBodyAdvice统一请求包装类，非必须
        "className":"net.linlan.commons.core.RequestAdvice"
    },
    "customRequestFields": [{ //自定义请求体的注释，@since 2.1.3，非必须
        "name":"source", //属性名
        "desc":"来源", //描述
        "ownerClassName":"java.util.String", //属性对应的类全路径
        "value":"source", //默认值或者mock值
        "required":false, //是否必填
        "ignore":true //是否忽略
    }],
    "requestHeaders": [{ //设置请求头，没有需求可以不设置
        "name": "token",//请求头名称
        "type": "string",//请求头类型
        "desc": "令牌",//请求头描述信息
        "value":"${token}",//不设置默认null
        "required": true,//是否必须
        "since": "-",//什么版本添加的改请求头
        "pathPatterns": "/api/**",//请看https://gitee.com/linlannet/ll-plugin-doc-generate/wikis/请求头高级配置?sort_id=4178978
        "excludePathPatterns":"/api/open/**"//请看https://gitee.com/linlannet/ll-plugin-doc-generate/wikis/请求头高级配置?sort_id=4178978
    }],
    "requestParams": [ //公共请求参数(通过拦截器处理的场景)，@since 2.2.3,没有需求请不要设置
        {
            "name": "configPathParam",//请求参数名称
            "type": "string",//请求参数类型
            "desc": "desc",//请求参数描述信息
            "paramIn": "path",
            "value": null,//不设置默认null，"testPath"
            "required": false,//是否必须
            "since": "-",//什么版本添加的改请求参数
            "pathPatterns": "*",//正则表达式过滤请求参数
            "excludePathPatterns":"/api/third/**" //参考请求头中的用法
        },{
            "name": "configQueryParam",//请求参数名称
            "type": "string",//请求参数类型
            "desc": "desc",//请求参数描述信息
            "paramIn": "query",
            "value":"testQuery",//不设置默认null
            "required": false,//是否必须
            "since": "-",//什么版本添加的改请求参数
            "pathPatterns": "*",//正则表达式过滤请求参数
            "excludePathPatterns":"/api/page/**"
        }
    ],
    "rpcApiDependencies":[{ // 项目开放的dubbo api接口模块依赖，配置后输出到文档方便使用者集成
        "artifactId":"SpringBoot2-Dubbo-Api",
        "groupId":"net.linlan.demo",
        "version":"1.0.0"
    }],
    "rpcConsumerConfig": "src/main/resources/consumer-example.conf",//文档中添加dubbo consumer集成配置，用于方便集成方可以快速集成
    "apiObjectReplacements": [{ // 自smart-doc 1.8.5开始你可以使用自定义类覆盖其他类做文档渲染，非必须
        "className": "org.springframework.data.domain.Pageable",
        "replacementClassName": "net.linlan.tools.model.PageRequestDto" //自定义的PageRequestDto替换Pageable做文档渲染
    }],
    "apiConstants": [{//从1.8.9开始配置自己的常量类，smart-doc在解析到常量时自动替换为具体的值，非必须
        "constantsClassName":"net.linlan.sys.web.KernelConstant"
    },{
        "constantsClassName":"net.linlan.plat.mbiz.ApiIntfConfig"
    }],
    "groups": [ // @since 2.2.5, 对不同的controller进行分组
        {
            "name": "网关部分接口API",
            "apis": "net.linlan.stage.api.*"
        },{
            "name": "一体化平台接口API",
            "apis": "net.linlan.plat.api.*"
        }
    ]
}

